name: CI

on:
  push:
    branches: [main]
  pull_request:

jobs:
  build:
    runs-on: ubuntu-latest
    env:
      CI: true
      SKIP_STRICT_ENV: 1
      BASE_URL: ${{ secrets.BASE_URL }}
      NEXT_PUBLIC_BASE_URL: ${{ secrets.BASE_URL }}
      CRON_SECRET: ${{ secrets.CRON_SECRET }}
      PREVIEW_SECRET: ${{ secrets.PREVIEW_SECRET }}
      ADMIN_JWT_SECRET: ${{ secrets.ADMIN_JWT_SECRET }}
      FIREBASE_SERVICE_ACCOUNT_JSON: ${{ secrets.FIREBASE_SERVICE_ACCOUNT_JSON }}
      FIREBASE_SERVICE_ACCOUNT_JSON_B64: ${{ secrets.FIREBASE_SERVICE_ACCOUNT_JSON_B64 }}
      FIREBASE_STORAGE_BUCKET: ${{ secrets.FIREBASE_STORAGE_BUCKET }}
      NEXT_PUBLIC_FIREBASE_STORAGE_BUCKET: ${{ secrets.FIREBASE_STORAGE_BUCKET }}
    steps:
      - uses: actions/checkout@v4

      # install pnpm BEFORE setup-node (so cache: pnpm doesn't fail)
      - name: Install pnpm on PATH
        uses: pnpm/action-setup@v4
        with:
          run_install: false

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version-file: .nvmrc
          # removed cache: pnpm + cache-dependency-path to avoid post-job path errors

      - name: Firebase SA to file and export path
        run: |
          set -e
          cred="$RUNNER_TEMP/firebase-sa.json"
          if [ -n "${FIREBASE_SERVICE_ACCOUNT_JSON}" ]; then
            echo "${FIREBASE_SERVICE_ACCOUNT_JSON}" > "$cred"
          elif [ -n "${FIREBASE_SERVICE_ACCOUNT_JSON_B64}" ]; then
            echo "${FIREBASE_SERVICE_ACCOUNT_JSON_B64}" | base64 -d > "$cred"
          else
            echo "Missing FIREBASE_SERVICE_ACCOUNT_JSON or FIREBASE_SERVICE_ACCOUNT_JSON_B64"; exit 1
          fi
          echo "GOOGLE_APPLICATION_CREDENTIALS=$cred" >> "$GITHUB_ENV"

      - name: Sanity
        run: |
          node -v
          command -v pnpm
          pnpm -v
          if [ -z "${GOOGLE_APPLICATION_CREDENTIALS}" ] || [ ! -s "${GOOGLE_APPLICATION_CREDENTIALS}" ]; then
            echo "GOOGLE_APPLICATION_CREDENTIALS is unset or file missing/empty: ${GOOGLE_APPLICATION_CREDENTIALS}"
            exit 1
          fi
          echo "Creds file present at ${GOOGLE_APPLICATION_CREDENTIALS}"

      - name: Fail if required secrets are missing or empty
        run: |
          set -euo pipefail
          required=(BASE_URL CRON_SECRET PREVIEW_SECRET ADMIN_JWT_SECRET)
          for name in "${required[@]}"; do
            value="${!name-}"
            stripped="${value//[ $'\t\r\n']/}"
            if [ -z "${stripped}" ]; then
              printf '::error::Missing or empty required secret: %s\n' "$name"
              exit 1
            fi
          done
        shell: bash

      - name: Show tool versions
        run: |
          node -v
          pnpm -v

      - name: Install dependencies
        run: pnpm install --frozen-lockfile

      - name: Build
        run: pnpm build

      - name: Lint
        run: pnpm lint

      - name: Typecheck
        run: pnpm typecheck

      - name: Test
        run: pnpm test
