name: Nightly visual audit

on:
  schedule:
    - cron: '0 6 * * *'
  workflow_dispatch:

concurrency:
  group: nightly-visual-${{ github.ref }}
  cancel-in-progress: false

permissions:
  contents: read

env:
  CI: true
  SKIP_STRICT_ENV: 1
  BASE_URL: ${{ secrets.BASE_URL }}
  NEXT_PUBLIC_BASE_URL: ${{ secrets.BASE_URL }}
  CRON_SECRET: ${{ secrets.CRON_SECRET }}

jobs:
  nightly-visual:
    name: Full visual regression (nightly)
    runs-on: ubuntu-latest
    timeout-minutes: 120
    container: mcr.microsoft.com/playwright:v1.47.0-jammy
    strategy:
      fail-fast: false
      matrix:
        shard: [1, 2, 3, 4]
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Install pnpm on PATH (fallback)
        uses: pnpm/action-setup@v4
        with:
          run_install: false

      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version-file: '.nvmrc'

      - name: Enable Corepack
        run: corepack enable

      - name: Activate pnpm
        run: |
          PNPM_VERSION=$(node -p "require('./package.json').packageManager?.split('@')[1] ?? ''")
          if [ -n "$PNPM_VERSION" ]; then
            corepack prepare "pnpm@${PNPM_VERSION}" --activate
          else
            corepack prepare pnpm@9 --activate
          fi

      - name: Show tool versions
        run: |
          node -v
          pnpm --version

      - name: Configure pnpm store dir for stable caching
        run: pnpm config set store-dir ~/.pnpm-store

      - name: Assert pnpm version
        run: node .github/scripts/assert-pnpm-version.mjs

      - name: Cache pnpm store
        uses: actions/cache@v4
        with:
          path: ~/.pnpm-store
          key: ${{ runner.os }}-pnpm-store-${{ hashFiles('pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-pnpm-store-

      - name: Install dependencies
        run: pnpm install --frozen-lockfile

      - name: Build app for visuals
        env:
          NEXT_TELEMETRY_DISABLED: '1'
        run: pnpm -s e2e:build

      - name: Start app for visual run
        env:
          NEXT_TELEMETRY_DISABLED: '1'
        run: |
          pnpm -s exec tsx scripts/start-test.ts --port 3000 &
          echo $! > /tmp/next.pid

      - name: Wait for app
        run: npx wait-on http://127.0.0.1:3000

      - name: Run nightly Playwright visual shard ${{ matrix.shard }} of 4
        timeout-minutes: 110
        run: pnpm -s visual:test -- --shard=${{ matrix.shard }}/4

      - name: Stop app
        if: always()
        run: |
          if [ -f /tmp/next.pid ]; then
            kill "$(cat /tmp/next.pid)" || true
          fi