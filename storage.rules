rules_version = '2';

// Craft rules based on data in your Firestore database
// allow write: if firestore.get(
//    /databases/(default)/documents/users/$(request.auth.uid)).data.isAdmin;
service firebase.storage {
  match /b/{bucket}/o {
    match /{allPaths=**} {
      // Only authenticated admins may access Storage.
      // Admins can be identified either by custom claims
      // (role === "admin" or isAdmin === true) or by a flag in
      // the corresponding Firestore user document.

      function isAdmin() {
        let userDocPath = /databases/(default)/documents/users/$(request.auth.uid);
        return request.auth != null && (
          ('role' in request.auth.token && request.auth.token.role == "admin") ||
          ('isAdmin' in request.auth.token && request.auth.token.isAdmin == true) ||
          (firestore.exists(userDocPath) && (
            let doc = firestore.get(userDocPath);
            'isAdmin' in doc.data && doc.data.isAdmin == true
          ))
        );
      }

      allow read, write: if isAdmin();
    }
  }
}
